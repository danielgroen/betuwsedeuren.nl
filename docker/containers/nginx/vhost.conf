map $http_accept $webp_suffix {
    default "";
    "~*webp" ".webp";
}

server {
    server_name _;
    root /var/www/html/web;
    index index.php index.html index.htm index.nginx-debian.html;
    server_tokens off;

    location / {
      try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    location ~ ^(/wp-admin(.*)|/wp-login(.*)) {
      rewrite ^ /wp/wp-admin;
    } 

    # ip whitelist
    location ~ \.php$ {
      try_files $uri $uri/ index.php;
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass php:9000;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param REQUEST_URI $request_uri;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $fastcgi_path_info;

      location ~ ^(/wp/wp-admin/(.*)|/wp-login(.*)) {
        # Image upload 
        client_max_body_size 200M;

        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
      }
    }

    location ~* ^(/wp-content/.+)\.(png|jpe?g)$ {
      set $base $1;
      set $webp_uri $base$webp_suffix;
      set $webp_old_uri $base.$2$webp_suffix;
      set $root "<<FULL PATH OF wp-content PARENT>>";
      root $root;
      add_header Vary Accept;
      if ( !-f $root$webp_uri ) {
          add_header X_WebP_SP_Miss $root$webp_uri;
      }
      try_files $webp_uri $webp_old_uri $uri =404;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # From bedrock docs
    location ~* /app/uploads/.*.php$ {
      deny all;
    }

    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
        allow 192.168.0.0/16;
        deny all;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

     # Block access to scripts in files directory
    location ~ ^/wp-content/[^/]+/uploads/.*\.php$ {
        deny all;
        return 404;
    }

     # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

     # Block access to "hidden" files and directories whose names begin with a period.
    location ~ (^|/)\. {
        return 403;
    }

     # Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }


    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
    }

    # Enforce clean URLs
    if ($request_uri ~* "^(.*/)index\.php(.*)") {
        return 307 $1$2;
    }

    ## Block SQL injections
    set $block_sql_injections 0;
    if ($query_string ~ "union.*select.*\(") {
    set $block_sql_injections 1;
    }
    if ($query_string ~ "union.*all.*select.*") {
    set $block_sql_injections 1;
    }
    if ($query_string ~ "concat.*\(") {
    set $block_sql_injections 1;
    }
    if ($block_sql_injections = 1) {
    return 403;
    }

     ## Block file injections
    set $block_file_injections 0;
    if ($query_string ~ "[a-zA-Z0-9_]=http://") {
    set $block_file_injections 1;
    }
    if ($query_string ~ "[a-zA-Z0-9_]=(\.\.//?)+") {
    set $block_file_injections 1;
    }
    if ($query_string ~ "[a-zA-Z0-9_]=/([a-z0-9_.]//?)+") {
    set $block_file_injections 1;
    }
    if ($block_file_injections = 1) {
    return 403;
    }

     ## Block common exploits
    set $block_common_exploits 0;
    if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
    set $block_common_exploits 1;
    }
    if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
    set $block_common_exploits 1;
    }
    if ($query_string ~ "proc/self/environ") {
    set $block_common_exploits 1;
    }
    if ($query_string ~ "mosConfig_[a-zA-Z_]{1,21}(=|\%3D)") {
    set $block_common_exploits 1;
    }
    if ($query_string ~ "base64_(en|de)code\(.*\)") {
    set $block_common_exploits 1;
    }
    if ($block_common_exploits = 1) {
    return 403;
    }

     ## Block spam
    set $block_spam 0;
    if ($query_string ~ "\b(ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)\b") {
    set $block_spam 1;
    }
    if ($query_string ~ "\b(erections|hoodia|huronriveracres|impotence|levitra|libido)\b") {
    set $block_spam 1;
    }
    if ($query_string ~ "\b(ambien|blue\spill|cialis|cocaine|ejaculation|erectile)\b") {
    set $block_spam 1;
    }
    if ($query_string ~ "\b(lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby)\b") {
    set $block_spam 1;
    }
    if ($block_spam = 1) {
    return 403;
    }
  }
