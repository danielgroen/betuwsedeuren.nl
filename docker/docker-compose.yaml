version: "3.3"

# NOTE: To make the command "chown -R" work, if it is a volume, also mount the volume
# NOTE: To keep the connection alive, use tail -f something, otherwhise compser will auto exit with code 0
services:
  # Db
  db:
    container_name: ${PROJECT}_mariadb
    image: mariadb:10.5.8
    restart: always
    volumes:
      - ./persistent-data/db/mysql:/var/lib/mysql:rw
      - ./persistent-data/db/backups:/backups:rw
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_DATABASE=${DB_NAME}

  # Nginx
  nginx:
    env_file: .env
    container_name: ${PROJECT}_nginx
    build:
      context: containers/nginx
    expose:
      - "80"
    depends_on:
      - php
    restart: always
    volumes:
      - ./persistent-data/log/nginx:/var/log/nginx:rw
      - ../src:/var/www/html:ro
      - ./persistent-data/uploads:/var/www/html/web/app/uploads:rw
      - ./containers/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./containers/nginx/vhost.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - default

  # Wordpress
  php:
    env_file: .env
    container_name: ${PROJECT}_php
    build:
      context: containers/php
      args:
        - ENVIRONMENT=${ENVIRONMENT}
        - CNAME=${CNAME}
    expose:
      - "9000"
    depends_on:
      - db
    restart: always
    volumes:
      - ../src:/var/www/html
      - ./persistent-data/uploads:/var/www/html/web/app/uploads:rw
      - ./persistent-data/uploads/woocommerce-pdf-invoices/mpdf/ttfontdata:/var/www/html/web/app/uploads/woocommerce-pdf-invoices/mpdf/ttfontdata:rw
    networks:
      - default

  # Composer
  composer:
    image: composer:latest
    container_name: ${PROJECT}_composer
    working_dir: /var/www/html
    command: >
      /bin/sh -c '
        chown -R 1000:82 /var/www/html;

        chown -R 1000:82 /var/www/html/web/app/uploads;
        chmod 774 -R     /var/www/html/web/app/uploads;

        chown -R 1000:82 /var/www/html/web/app/webp-express;

        chown -R 82:1000 /var/www/html/web/app/themes/jacket/acf-json;
        cp /robots.txt /var/www/html/web/robots.txt;
        cp /var/www/.env /var/www/html/.env;
        sed -i "s/CNAME/${CNAME}/g" /var/www/html/web/robots.txt;
        composer install;
        tail -f /dev/null;
      '
    volumes:
      - ./containers/composer/robots.txt:/robots.txt
      - ../src/:/var/www/html:rw
      - ./persistent-data/uploads:/var/www/html/web/app/uploads:rw
      - ./.env:/var/www/.env:ro
    networks:
      - default

  # Wp-cli
  wp:
    env_file: .env
    image: wordpress:cli
    container_name: ${PROJECT}_wp-cli
    restart: always
    user: root
    working_dir: /var/www/html
    command: >
      /bin/sh -c '
        wp cli update;
        chown -R 82:1000 /backups;
        crond -f
        tail -f /dev/null;
      '
    volumes:
      - ../src:/var/www/html
      - ./.env:/var/www/html/.env:ro
      - ./persistent-data/db/backups:/backups:rw
    entrypoint: docker-entrypoint.sh
    depends_on:
      - db
      - php
    networks:
      - default
