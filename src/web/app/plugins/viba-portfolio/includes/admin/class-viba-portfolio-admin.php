<?php
/**
 * Viba Portfolio Admin.
 *
 * @package		Viba_Portfolio/Admin/Classes
 * @since 		1.0
 * @author 		apalodi
 */

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

if ( ! class_exists( 'Viba_Portfolio_Admin' ) ) :

class Viba_Portfolio_Admin {

	/**
	 * Constructor
	 */
	public function __construct() {

		$this->includes(); // include all the admin files

		add_action( 'wp_ajax_viba_portfolio_create_new_style', array( $this, 'create_new_style' ) );
        add_action( 'wp_ajax_viba_portfolio_duplicate_style', array( $this, 'duplicate_style' ) );

		add_action( 'redux/options/viba_portfolio_options/saved', array( $this, 'create_dynamic_css' ) ); 	// Create new css file when options are changed
		add_action( 'redux/options/viba_portfolio_options/saved', array( $this, 'check_for_permalinks_change' ), 90, 2 ); 	
		add_action( 'redux/options/viba_portfolio_options/saved', 'flush_rewrite_rules' ); 					// Flush rewrite rules when options are changed

		add_action( 'admin_enqueue_scripts', array( $this, 'enqueue_scripts' ) );
		
		add_filter( 'manage_edit-viba_portfolio_columns', array( $this, 'add_thumbnail_column') );
		add_action( 'manage_viba_portfolio_posts_custom_column', array( $this, 'display_thumbnail' ) );
		add_action( 'dashboard_glance_items', array( $this, 'add_portfolio_to_glance_items' ) );
		add_filter( 'plugin_action_links_' . viba_portfolio()->basename, array( $this, 'plugin_action_links' ) );
		add_filter( 'plugin_row_meta', array( $this, 'plugin_row_meta' ), 10, 2 );

	}

	/**
	 * Hack fix for when the permalinks options are changed trigger a save click to flush the permalinks.
	 * This is neccessary for the new redux ajax save option.
	 *
	 * @since 	1.6
	 * @access 	public
	 */
	public function check_for_permalinks_change( $options, $changed_values ) {

		if ( isset( $changed_values['has-archive'] ) || isset( $changed_values['archive-page'] ) || isset( $changed_values['category-base'] ) || isset( $changed_values['tag-base'] ) || isset( $changed_values['permalinks-base'] ) ) {
			echo '<script>jQuery( "#redux_save" ).trigger( "click" );</script>';
		}

	}

	/**
	 * Include all the admin files.
	 *
	 * @since 	1.0
	 * @access 	private
	 */
	private function includes() {

		include_once( 'class-viba-portfolio-export.php' );
		include_once( 'metaboxes/class-viba-portfolio-metaboxes.php' );

		if ( ! class_exists( 'ReduxFrameworkPlugin' ) ) {
		    include_once( 'redux/framework.php' );
		}

		include_once( 'extend-redux/extensions-loader.php' );
		include_once( 'extend-redux/extensions/vp_style/vp_style/styles.php' );
		
		include_once( 'settings/setup-redux.php' ); 
		include_once( 'settings/setup-metaboxes.php' ); 

	}

	/**
	 * Create new style
	 *
	 * @since 	1.0
	 * @access 	public
	 * @return 	string or null
	 */
	public function create_new_style() {

		check_ajax_referer( 'viba-portfolio-styles-nonce', 'nonce' );

		$style_name = $_GET['style'];

		echo viba_portfolio_admin_generate_style_options( $style_name );

		die();

	}

    /**
     * Duplicate styles
     *
     * @since   1.0
     * @access  public
     * @return  string or null
     */
    public function duplicate_style() {

        check_ajax_referer( 'viba-portfolio-styles-nonce', 'nonce' );

        global $viba_portfolio_options;
        $style_slug = $_GET['slug'];
        $style_name = $_GET['style'];
        $value = $viba_portfolio_options['portfolio-style']['styles'][$style_slug];

        echo viba_portfolio_admin_generate_style_options( $style_name, $value );

        die();

    }

	/**
	 * Create CSS file.
	 *
	 * @since 	1.0
	 * @access 	public
	 */
	public function create_dynamic_css() {

		$access_type = get_filesystem_method();
		
		if ( $access_type === 'direct' ) {

			/* we can now safely run request_filesystem_credentials() without any issues and don't need to worry about passing in a URL */
			$creds = request_filesystem_credentials( site_url() . '/wp-admin/', '', false, false, array() );

			/* initialize the API */
			if ( ! WP_Filesystem( $creds ) ) {
				/* any problems and we exit */
				return false;
			}	

			global $wp_filesystem;
			/* do our file manipulations below */

			ob_start();
			echo "
	/*=============================================================
 	# CUSTOM CSS
 	- Please do not edit this file. this file is generated dynamically
 	- Every changes here will be overwritten
	===============================================================*/
	";		
			echo viba_portfolio_get_custom_css();
			$css = ob_get_clean();
			$upload_dir = wp_upload_dir(); 
			$filename = $upload_dir['basedir'] . '/viba-portfolio/custom-styles.css';

			if ( ! $wp_filesystem->is_dir( $upload_dir['basedir'] . '/viba-portfolio/' ) ) {
				/* directory doesn't exist, so let's create it */
				$wp_filesystem->mkdir( $upload_dir['basedir'] . '/viba-portfolio/' );
			}

			$wp_filesystem->put_contents( $filename, $css , FS_CHMOD_FILE );

		}

	}

	/**
	 * Enqueue styles.
	 *
	 * @since 	1.0
	 * @access 	public
	 */
	public function enqueue_scripts() {

		$protocol 		= is_ssl() ? 'https' : 'http';
		$suffix			= viba_portfolio()->debug ? '' : '.min';
		$assets_url		= viba_portfolio()->admin_dir_url . 'assets/';
		$plugin_version	= viba_portfolio()->version;

		// CSS
		wp_register_style( 'viba-portfolio-admin', $assets_url . 'css/admin.css', array( 'wp-color-picker' ), $plugin_version );
		wp_enqueue_style( 'viba-portfolio-admin' );

		add_editor_style( $assets_url . 'css/editor-style.css' );

		// JS
		wp_register_script( 'viba-portfolio-admin', $assets_url . 'js/admin.js', array( 'jquery', 'media-editor', 'wp-color-picker', 'jquery-ui-tabs' ), $plugin_version, true );
		wp_localize_script( 
			'viba-portfolio-admin', 
			'viba_portfolio_admin', 
			array(
				'ajax_url' 				=> viba_portfolio()->ajax_url,
				'nonce' 				=> wp_create_nonce( 'viba-portfolio-admin-nonce' ),
				'gallery_title' 		=> __( 'Add Images to Viba Portfolio Gallery', 'viba-portfolio' ),
				'add_to_gallery_text' 	=> __( 'Add To Gallery', 'viba-portfolio' ),
				'edit_gallery_text' 	=> __( 'Edit Gallery', 'viba-portfolio' ),
				'edit_image_text'		=> __( 'Edit Image', 'viba-portfolio' ),
				'remove_image_text'		=> __( 'Remove Image', 'viba-portfolio' )  
			)
		);
		
		wp_enqueue_script( 'viba-portfolio-admin' );

	}

	/**
	 * Add thumbnail column to portfolio all items list.
	 *
	 * @since 	1.0
	 * @access 	public
	 */
	public function add_thumbnail_column( $columns ) {
		$column_thumb = array( 'thumbnail' => _x( 'Media', 'Column name in all portfolio items list', 'viba-portfolio' ) );
		$columns = array_slice( $columns, 0, 2, true ) + $column_thumb + array_slice( $columns, 1, NULL, true );
		return $columns;
	}
	
	/**
	 * Display thumbnail in portfolio all items list.
	 *
	 * @since 	1.0
	 * @access 	public
	 */
	public function display_thumbnail( $column ) {
		global $post;
		switch ( $column ) {
			case 'thumbnail':
				$gallery_ids = get_post_meta( $post->ID, '_viba_portfolio_gallery', true );
				echo get_the_post_thumbnail( $post->ID, array( 50, 50 ) );

				if ( 'gallery' == get_post_format( $post->ID ) && ! empty( $gallery_ids ) ) {
					echo '<div class="viba-portfolio-column-gallery">';
					foreach ( $gallery_ids as $id ) {
						echo wp_get_attachment_image( $id, array( 50, 50 ) );
					}
					echo '</div>';
				}
				
				break;
		}
	}

	/**
	 * Add number of portfolio items to wordpress dashboard glance items.
	 *
	 * @since 	1.0
	 * @access 	public
	 */
	public function add_portfolio_to_glance_items( $items ) {
	    
	    $type = viba_portfolio()->post_type;    

	    if ( post_type_exists( $type ) ) {

		    $num_posts = wp_count_posts( $type );
		        
		    if ( $num_posts ) {
		            
		        $published = intval( $num_posts->publish );
		        $post_type = get_post_type_object( $type );

		        $text = _nx( '%s Viba Portfolio', '%s Viba Portfolios', $published, 'Dashboard glance items.', 'viba-portfolio' );
		        $text = sprintf( $text, number_format_i18n( $published ) );
		            
		        if ( current_user_can( $post_type->cap->edit_posts ) ) {
		            $items[] = sprintf( '<a class="%1$s-count" href="edit.php?post_type=%1$s">%2$s</a>', $type, $text ) . "\n";
		        } else {
		            $items[] = sprintf( '<span class="%1$s-count">%2$s</span>', $type, $text ) . "\n";
		        }
		    }
		    
		}
	    
	    return $items;    

	}

	/**
	 * Show action links on the plugin screen.
	 *
	 * @since 	1.0
	 * @access	public
	 * @param	mixed $links Plugin Action links
	 * @return	array
	 */
	public function plugin_action_links( $links ) {

		if ( current_user_can( 'manage_viba_portfolio' ) ) {
			$action_links = array(
				'settings'	=>	'<a href="' . admin_url( 'edit.php?post_type=' . viba_portfolio()->post_type . '&page=viba_portfolio_options' ) . '" title="' . esc_attr( _x( 'Viba Portfolio Settings', 'Plugins action link', 'viba-portfolio' ) ) . '">' . _x( 'Settings', 'Plugins action link', 'viba-portfolio' ) . '</a>',
			);

			return array_merge( $action_links, $links );
		}

	}

	/**
	 * Show row meta on the plugin screen.
	 *
	 * @since 	1.0
	 * @access	public
	 * @param	mixed $links Plugin Row Meta
	 * @param	mixed $file  Plugin Base file
	 * @return	array
	 */
	public function plugin_row_meta( $links, $file ) {
		if ( $file == viba_portfolio()->basename ) {
			$row_meta = array(
				'docs'		=>	'<a target="_blank" href="' . esc_url( apply_filters( 'viba_portfolio_docs_url', 'http://plugins.apalodi.com/viba-portfolio/documentation/' ) ) . '">' . _x( 'Documentation', 'Plugins row meta', 'viba-portfolio' ) . '</a>',
				'support'	=>	'<a target="_blank" href="' . esc_url( apply_filters( 'viba_portfolio_support_url', 'http://plugins.apalodi.com/viba-portfolio/support/' ) ) . '">' . _x( 'Support', 'Plugins row meta', 'viba-portfolio' ) . '</a>',
			);

			return array_merge( $links, $row_meta );
		}

		return (array) $links;
	}

}

new Viba_Portfolio_Admin();

endif;